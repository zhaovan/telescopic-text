{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["TelescopicText","_ref","children","className","_ref$color","color","_ref$fadeInSpeed","fadeInSpeed","_React$useState","useState","showChildren","setShowChildren","childrenArray","Children","toArray","hasChildrenObject","some","child","createElement","map","index","cloneElement","Fragment","key","onClick","style","animationDuration","backgroundColor","App","React","href","target","rel","ReactDOM","render","document","getElementById"],"mappings":"wRAYaA,EAAiB,SAAHC,G,IACzBC,EAAQD,EAARC,SACAC,EAASF,EAATE,UAASC,EAAAH,EACTI,aAAK,IAAAD,EAAG,OAAMA,EAAAE,EAAAL,EACdM,mBAAW,IAAAD,EAAG,IAAIA,EAElBE,EAAwCC,oBAAe,GAAhDC,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAgBC,WAAeC,QAAQZ,GAEvCa,EAAoBH,EAAcI,MACtC,SAACC,GAAK,MAAsB,kBAAVA,KASpB,OACEC,wBAAA,QAAMf,UAAWA,GACd,IACAS,EAAcO,KACb,SAACF,EAAyBG,GACxB,MAAqB,kBAAVH,GAAuBP,EAgBN,kBAAVO,GAAsBP,EAC/BW,uBAAmBJ,EAAO,CAAEZ,UAE5Ba,wBAACI,WAAc,CAACC,IAAKH,IAjB1BF,wBAAA,QACEK,IAAKH,EACLI,QAAS,WAdjBT,GACFJ,GAAgB,IAcNc,MAAO,CACLC,kBAAsBnB,EAAW,KACjCoB,gBAAiBZ,EAAoBV,EAAQ,QAE/CF,UACEY,EAAoBU,EAAuBA,GAG5CR,MASR,MCiBMW,G,KAvEH,WACV,OACEC,IAAAX,cAAA,OAAKf,UAAU,aACb0B,IAAAX,cAAA,UAAI,mBAEJW,IAAAX,cAAA,SAAG,8DAC2D,IAC5DW,IAAAX,cAAA,KACEY,KAAK,kCACLC,OAAO,SACPC,IAAI,uBACL,gBAEI,IAAI,gQAMXH,IAAAX,cAAA,SAAG,mVAQHW,IAAAX,cAAA,SAAG,6EAEM,IACPW,IAAAX,cAAA,KACEY,KAAK,6CACLC,OAAO,SACPC,IAAI,uBAEH,IAAI,SAITH,IAAAX,cAAA,OAAKf,UAAU,kBACb0B,IAAAX,cAAA,UAAI,iBACJW,IAAAX,cAAA,KAAGf,UAAU,QAAO,cAElB0B,IAAAX,cAAClB,EAAc,CAACK,MAAO,QAAQ,QAE7BwB,IAAAX,cAAClB,EAAc,KAAC,qBAEd6B,IAAAX,cAAClB,EAAc,KAAC,kEAIH,0EAEb,IACJ6B,IAAAX,cAAClB,EAAc,CAACK,MAAO,QAAQ,WAE7BwB,IAAAX,cAAClB,EAAc,KAAC,uBAEd6B,IAAAX,cAAClB,EAAc,KAAC,mFAKH,4BC9D3BiC,IAASC,OAAOL,IAAAX,cAACU,EAAG,MAAKO,SAASC,eAAe,W","file":"static/js/main.e1f2c093.chunk.js","sourcesContent":["import * as React from 'react'\nimport style from './index.module.css'\n\ninterface Props {\n  children:\n    | (string | React.ReactElement | Element)[]\n    | (string | React.ReactElement | Element)\n  className?: string\n  color?: string\n  fadeInSpeed?: number\n}\n\nexport const TelescopicText = ({\n  children,\n  className,\n  color = 'aqua',\n  fadeInSpeed = 2000\n}: Props) => {\n  const [showChildren, setShowChildren] = React.useState(false)\n\n  const childrenArray = React.Children.toArray(children)\n\n  const hasChildrenObject = childrenArray.some(\n    (child) => typeof child === 'object'\n  )\n\n  function handleTextClick() {\n    if (hasChildrenObject) {\n      setShowChildren(true)\n    }\n  }\n\n  return (\n    <span className={className}>\n      {' '}\n      {childrenArray.map(\n        (child: React.ReactChild, index: number): React.ReactElement => {\n          if (typeof child === 'string' && !showChildren) {\n            return (\n              <span\n                key={index}\n                onClick={() => handleTextClick()}\n                style={{\n                  animationDuration: `${fadeInSpeed}ms`,\n                  backgroundColor: hasChildrenObject ? color : 'none'\n                }}\n                className={\n                  hasChildrenObject ? style.telescopicText : style.text\n                }\n              >\n                {child}\n              </span>\n            )\n          } else if (typeof child === 'object' && showChildren) {\n            return React.cloneElement(child, { color })\n          } else {\n            return <React.Fragment key={index} />\n          }\n        }\n      )}{' '}\n    </span>\n  )\n}\n","import React from 'react'\n\nimport { TelescopicText } from 'telescopic-text'\nimport 'telescopic-text/dist/index.css'\n\nconst App = () => {\n  return (\n    <div className='container'>\n      <h1>Telescopic Text</h1>\n\n      <p>\n        TelescopicText is a lightweight react component inspired by{' '}\n        <a\n          href='https://www.telescopictext.org/'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          this project\n        </a>{' '}\n        which essentially has the same implementation but I can't find the\n        source code for. Plus I wanted to write it in react. So hey! Now it\n        exists. Also the typeface is recursive which I think should be on the\n        web more. So here it is, in front of your eyes.\n      </p>\n      <p>\n        Formally, it acts as a small thing to question how you add and elaborate\n        to text. Could it be used as a tool for editing? Who knows! Does it add\n        agency to the user who views the page? 100%! I love little works that\n        are dynamic, fluid, interrogating and bringing in the viewer to interact\n        with the work. That's the joy of life isn't it.\n      </p>\n\n      <p>\n        For more full documentation and info, check out the github repo and\n        README{' '}\n        <a\n          href='https://github.com/zhaovan/telescopic-text'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {' '}\n          here\n        </a>\n      </p>\n      <div className='poem-container'>\n        <h2>on this earth</h2>\n        <p className='poem'>\n          I looked to\n          <TelescopicText color={'gray'}>\n            carve\n            <TelescopicText>\n              bury my sins under\n              <TelescopicText>\n                pray to the gods that my life could be forgiven for ravaging\n              </TelescopicText>\n            </TelescopicText>\n          </TelescopicText>\n          the land. I never, wanted to do this. I never, wanted to be here. I\n          was{' '}\n          <TelescopicText color={'gray'}>\n            tricked.\n            <TelescopicText>\n              tortured and beaten.\n              <TelescopicText>\n                burned, demolished, and rattled at the stake until I came\n                quenching for more.\n              </TelescopicText>\n            </TelescopicText>\n          </TelescopicText>\n          And yet, here I lay.\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}